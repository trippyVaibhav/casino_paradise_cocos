{
  "__type__": "cc.TextAsset",
  "_name": "axios.d",
  "_objFlags": 0,
  "_native": "",
  "text": "// TypeScript Version: 4.7\r\nexport type AxiosHeaderValue = AxiosHeaders | string | string[] | number | boolean | null;\r\n\r\ninterface RawAxiosHeaders {\r\n  [key: string]: AxiosHeaderValue;\r\n}\r\n\r\ntype MethodsHeaders = Partial<{\r\n  [Key in Method as Lowercase<Key>]: AxiosHeaders;\r\n} & {common: AxiosHeaders}>;\r\n\r\ntype AxiosHeaderMatcher = string | RegExp | ((this: AxiosHeaders, value: string, name: string) => boolean);\r\n\r\ntype AxiosHeaderParser = (this: AxiosHeaders, value: AxiosHeaderValue, header: string) => any;\r\n\r\nexport class AxiosHeaders {\r\n  constructor(\r\n      headers?: RawAxiosHeaders | AxiosHeaders | string\r\n  );\r\n\r\n  [key: string]: any;\r\n\r\n  set(headerName?: string, value?: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  set(headers?: RawAxiosHeaders | AxiosHeaders | string, rewrite?: boolean): AxiosHeaders;\r\n\r\n  get(headerName: string, parser: RegExp): RegExpExecArray | null;\r\n  get(headerName: string, matcher?: true | AxiosHeaderParser): AxiosHeaderValue;\r\n\r\n  has(header: string, matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  delete(header: string | string[], matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  clear(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  normalize(format: boolean): AxiosHeaders;\r\n\r\n  concat(...targets: Array<AxiosHeaders | RawAxiosHeaders | string | undefined | null>): AxiosHeaders;\r\n\r\n  toJSON(asStrings?: boolean): RawAxiosHeaders;\r\n\r\n  static from(thing?: AxiosHeaders | RawAxiosHeaders | string): AxiosHeaders;\r\n\r\n  static accessor(header: string | string[]): AxiosHeaders;\r\n\r\n  static concat(...targets: Array<AxiosHeaders | RawAxiosHeaders | string | undefined | null>): AxiosHeaders;\r\n\r\n  setContentType(value: ContentType, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  getContentType(parser?: RegExp): RegExpExecArray | null;\r\n  getContentType(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\r\n  hasContentType(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  setContentLength(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  getContentLength(parser?: RegExp): RegExpExecArray | null;\r\n  getContentLength(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\r\n  hasContentLength(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  setAccept(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  getAccept(parser?: RegExp): RegExpExecArray | null;\r\n  getAccept(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\r\n  hasAccept(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  setUserAgent(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  getUserAgent(parser?: RegExp): RegExpExecArray | null;\r\n  getUserAgent(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\r\n  hasUserAgent(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  setContentEncoding(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  getContentEncoding(parser?: RegExp): RegExpExecArray | null;\r\n  getContentEncoding(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\r\n  hasContentEncoding(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  setAuthorization(value: AxiosHeaderValue, rewrite?: boolean | AxiosHeaderMatcher): AxiosHeaders;\r\n  getAuthorization(parser?: RegExp): RegExpExecArray | null;\r\n  getAuthorization(matcher?: AxiosHeaderMatcher): AxiosHeaderValue;\r\n  hasAuthorization(matcher?: AxiosHeaderMatcher): boolean;\r\n\r\n  [Symbol.iterator](): IterableIterator<[string, AxiosHeaderValue]>;\r\n}\r\n\r\ntype CommonRequestHeadersList = 'Accept' | 'Content-Length' | 'User-Agent' | 'Content-Encoding' | 'Authorization';\r\n\r\ntype ContentType = AxiosHeaderValue | 'text/html' | 'text/plain' | 'multipart/form-data' | 'application/json' | 'application/x-www-form-urlencoded' | 'application/octet-stream';\r\n\r\nexport type RawAxiosRequestHeaders = Partial<RawAxiosHeaders & {\r\n  [Key in CommonRequestHeadersList]: AxiosHeaderValue;\r\n} & {\r\n  'Content-Type': ContentType\r\n}>;\r\n\r\nexport type AxiosRequestHeaders = RawAxiosRequestHeaders & AxiosHeaders;\r\n\r\ntype CommonResponseHeadersList = 'Server' | 'Content-Type' | 'Content-Length' | 'Cache-Control'| 'Content-Encoding';\r\n\r\ntype RawCommonResponseHeaders = {\r\n  [Key in CommonResponseHeadersList]: AxiosHeaderValue;\r\n} & {\r\n  \"set-cookie\": string[];\r\n};\r\n\r\nexport type RawAxiosResponseHeaders = Partial<RawAxiosHeaders & RawCommonResponseHeaders>;\r\n\r\nexport type AxiosResponseHeaders = RawAxiosResponseHeaders & AxiosHeaders;\r\n\r\nexport interface AxiosRequestTransformer {\r\n  (this: InternalAxiosRequestConfig, data: any, headers: AxiosRequestHeaders): any;\r\n}\r\n\r\nexport interface AxiosResponseTransformer {\r\n  (this: InternalAxiosRequestConfig, data: any, headers: AxiosResponseHeaders, status?: number): any;\r\n}\r\n\r\nexport interface AxiosAdapter {\r\n  (config: InternalAxiosRequestConfig): AxiosPromise;\r\n}\r\n\r\nexport interface AxiosBasicCredentials {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AxiosProxyConfig {\r\n  host: string;\r\n  port: number;\r\n  auth?: AxiosBasicCredentials;\r\n  protocol?: string;\r\n}\r\n\r\nexport enum HttpStatusCode {\r\n  Continue = 100,\r\n  SwitchingProtocols = 101,\r\n  Processing = 102,\r\n  EarlyHints = 103,\r\n  Ok = 200,\r\n  Created = 201,\r\n  Accepted = 202,\r\n  NonAuthoritativeInformation = 203,\r\n  NoContent = 204,\r\n  ResetContent = 205,\r\n  PartialContent = 206,\r\n  MultiStatus = 207,\r\n  AlreadyReported = 208,\r\n  ImUsed = 226,\r\n  MultipleChoices = 300,\r\n  MovedPermanently = 301,\r\n  Found = 302,\r\n  SeeOther = 303,\r\n  NotModified = 304,\r\n  UseProxy = 305,\r\n  Unused = 306,\r\n  TemporaryRedirect = 307,\r\n  PermanentRedirect = 308,\r\n  BadRequest = 400,\r\n  Unauthorized = 401,\r\n  PaymentRequired = 402,\r\n  Forbidden = 403,\r\n  NotFound = 404,\r\n  MethodNotAllowed = 405,\r\n  NotAcceptable = 406,\r\n  ProxyAuthenticationRequired = 407,\r\n  RequestTimeout = 408,\r\n  Conflict = 409,\r\n  Gone = 410,\r\n  LengthRequired = 411,\r\n  PreconditionFailed = 412,\r\n  PayloadTooLarge = 413,\r\n  UriTooLong = 414,\r\n  UnsupportedMediaType = 415,\r\n  RangeNotSatisfiable = 416,\r\n  ExpectationFailed = 417,\r\n  ImATeapot = 418,\r\n  MisdirectedRequest = 421,\r\n  UnprocessableEntity = 422,\r\n  Locked = 423,\r\n  FailedDependency = 424,\r\n  TooEarly = 425,\r\n  UpgradeRequired = 426,\r\n  PreconditionRequired = 428,\r\n  TooManyRequests = 429,\r\n  RequestHeaderFieldsTooLarge = 431,\r\n  UnavailableForLegalReasons = 451,\r\n  InternalServerError = 500,\r\n  NotImplemented = 501,\r\n  BadGateway = 502,\r\n  ServiceUnavailable = 503,\r\n  GatewayTimeout = 504,\r\n  HttpVersionNotSupported = 505,\r\n  VariantAlsoNegotiates = 506,\r\n  InsufficientStorage = 507,\r\n  LoopDetected = 508,\r\n  NotExtended = 510,\r\n  NetworkAuthenticationRequired = 511,\r\n}\r\n\r\nexport type Method =\r\n    | 'get' | 'GET'\r\n    | 'delete' | 'DELETE'\r\n    | 'head' | 'HEAD'\r\n    | 'options' | 'OPTIONS'\r\n    | 'post' | 'POST'\r\n    | 'put' | 'PUT'\r\n    | 'patch' | 'PATCH'\r\n    | 'purge' | 'PURGE'\r\n    | 'link' | 'LINK'\r\n    | 'unlink' | 'UNLINK';\r\n\r\nexport type ResponseType =\r\n    | 'arraybuffer'\r\n    | 'blob'\r\n    | 'document'\r\n    | 'json'\r\n    | 'text'\r\n    | 'stream'\r\n    | 'formdata';\r\n\r\nexport type responseEncoding =\r\n    | 'ascii' | 'ASCII'\r\n    | 'ansi' | 'ANSI'\r\n    | 'binary' | 'BINARY'\r\n    | 'base64' | 'BASE64'\r\n    | 'base64url' | 'BASE64URL'\r\n    | 'hex' | 'HEX'\r\n    | 'latin1' | 'LATIN1'\r\n    | 'ucs-2' | 'UCS-2'\r\n    | 'ucs2' | 'UCS2'\r\n    | 'utf-8' | 'UTF-8'\r\n    | 'utf8' | 'UTF8'\r\n    | 'utf16le' | 'UTF16LE';\r\n\r\nexport interface TransitionalOptions {\r\n  silentJSONParsing?: boolean;\r\n  forcedJSONParsing?: boolean;\r\n  clarifyTimeoutError?: boolean;\r\n}\r\n\r\nexport interface GenericAbortSignal {\r\n  readonly aborted: boolean;\r\n  onabort?: ((...args: any) => any) | null;\r\n  addEventListener?: (...args: any) => any;\r\n  removeEventListener?: (...args: any) => any;\r\n}\r\n\r\nexport interface FormDataVisitorHelpers {\r\n  defaultVisitor: SerializerVisitor;\r\n  convertValue: (value: any) => any;\r\n  isVisitable: (value: any) => boolean;\r\n}\r\n\r\nexport interface SerializerVisitor {\r\n  (\r\n      this: GenericFormData,\r\n      value: any,\r\n      key: string | number,\r\n      path: null | Array<string | number>,\r\n      helpers: FormDataVisitorHelpers\r\n  ): boolean;\r\n}\r\n\r\nexport interface SerializerOptions {\r\n  visitor?: SerializerVisitor;\r\n  dots?: boolean;\r\n  metaTokens?: boolean;\r\n  indexes?: boolean | null;\r\n}\r\n\r\n// tslint:disable-next-line\r\nexport interface FormSerializerOptions extends SerializerOptions {\r\n}\r\n\r\nexport interface ParamEncoder {\r\n  (value: any, defaultEncoder: (value: any) => any): any;\r\n}\r\n\r\nexport interface CustomParamsSerializer {\r\n  (params: Record<string, any>, options?: ParamsSerializerOptions): string;\r\n}\r\n\r\nexport interface ParamsSerializerOptions extends SerializerOptions {\r\n  encode?: ParamEncoder;\r\n  serialize?: CustomParamsSerializer;\r\n}\r\n\r\ntype MaxUploadRate = number;\r\n\r\ntype MaxDownloadRate = number;\r\n\r\ntype BrowserProgressEvent = any;\r\n\r\nexport interface AxiosProgressEvent {\r\n  loaded: number;\r\n  total?: number;\r\n  progress?: number;\r\n  bytes: number;\r\n  rate?: number;\r\n  estimated?: number;\r\n  upload?: boolean;\r\n  download?: boolean;\r\n  event?: BrowserProgressEvent;\r\n  lengthComputable: boolean;\r\n}\r\n\r\ntype Milliseconds = number;\r\n\r\ntype AxiosAdapterName = 'fetch' | 'xhr' | 'http' | string;\r\n\r\ntype AxiosAdapterConfig = AxiosAdapter | AxiosAdapterName;\r\n\r\nexport type AddressFamily = 4 | 6 | undefined;\r\n\r\nexport interface LookupAddressEntry {\r\n  address: string;\r\n  family?: AddressFamily;\r\n}\r\n\r\nexport type LookupAddress = string | LookupAddressEntry;\r\n\r\nexport interface AxiosRequestConfig<D = any> {\r\n  url?: string;\r\n  method?: Method | string;\r\n  baseURL?: string;\r\n  transformRequest?: AxiosRequestTransformer | AxiosRequestTransformer[];\r\n  transformResponse?: AxiosResponseTransformer | AxiosResponseTransformer[];\r\n  headers?: (RawAxiosRequestHeaders & MethodsHeaders) | AxiosHeaders;\r\n  params?: any;\r\n  paramsSerializer?: ParamsSerializerOptions | CustomParamsSerializer;\r\n  data?: D;\r\n  timeout?: Milliseconds;\r\n  timeoutErrorMessage?: string;\r\n  withCredentials?: boolean;\r\n  adapter?: AxiosAdapterConfig | AxiosAdapterConfig[];\r\n  auth?: AxiosBasicCredentials;\r\n  responseType?: ResponseType;\r\n  responseEncoding?: responseEncoding | string;\r\n  xsrfCookieName?: string;\r\n  xsrfHeaderName?: string;\r\n  onUploadProgress?: (progressEvent: AxiosProgressEvent) => void;\r\n  onDownloadProgress?: (progressEvent: AxiosProgressEvent) => void;\r\n  maxContentLength?: number;\r\n  validateStatus?: ((status: number) => boolean) | null;\r\n  maxBodyLength?: number;\r\n  maxRedirects?: number;\r\n  maxRate?: number | [MaxUploadRate, MaxDownloadRate];\r\n  beforeRedirect?: (options: Record<string, any>, responseDetails: {headers: Record<string, string>, statusCode: HttpStatusCode}) => void;\r\n  socketPath?: string | null;\r\n  transport?: any;\r\n  httpAgent?: any;\r\n  httpsAgent?: any;\r\n  proxy?: AxiosProxyConfig | false;\r\n  cancelToken?: CancelToken;\r\n  decompress?: boolean;\r\n  transitional?: TransitionalOptions;\r\n  signal?: GenericAbortSignal;\r\n  insecureHTTPParser?: boolean;\r\n  env?: {\r\n    FormData?: new (...args: any[]) => object;\r\n  };\r\n  formSerializer?: FormSerializerOptions;\r\n  family?: AddressFamily;\r\n  lookup?: ((hostname: string, options: object, cb: (err: Error | null, address: LookupAddress | LookupAddress[], family?: AddressFamily) => void) => void) |\r\n      ((hostname: string, options: object) => Promise<[address: LookupAddressEntry | LookupAddressEntry[], family?: AddressFamily] | LookupAddress>);\r\n  withXSRFToken?: boolean | ((config: InternalAxiosRequestConfig) => boolean | undefined);\r\n  fetchOptions?: Record<string, any>;\r\n}\r\n\r\n// Alias\r\nexport type RawAxiosRequestConfig<D = any> = AxiosRequestConfig<D>;\r\n\r\nexport interface InternalAxiosRequestConfig<D = any> extends AxiosRequestConfig<D> {\r\n  headers: AxiosRequestHeaders;\r\n}\r\n\r\nexport interface HeadersDefaults {\r\n  common: RawAxiosRequestHeaders;\r\n  delete: RawAxiosRequestHeaders;\r\n  get: RawAxiosRequestHeaders;\r\n  head: RawAxiosRequestHeaders;\r\n  post: RawAxiosRequestHeaders;\r\n  put: RawAxiosRequestHeaders;\r\n  patch: RawAxiosRequestHeaders;\r\n  options?: RawAxiosRequestHeaders;\r\n  purge?: RawAxiosRequestHeaders;\r\n  link?: RawAxiosRequestHeaders;\r\n  unlink?: RawAxiosRequestHeaders;\r\n}\r\n\r\nexport interface AxiosDefaults<D = any> extends Omit<AxiosRequestConfig<D>, 'headers'> {\r\n  headers: HeadersDefaults;\r\n}\r\n\r\nexport interface CreateAxiosDefaults<D = any> extends Omit<AxiosRequestConfig<D>, 'headers'> {\r\n  headers?: RawAxiosRequestHeaders | AxiosHeaders | Partial<HeadersDefaults>;\r\n}\r\n\r\nexport interface AxiosResponse<T = any, D = any> {\r\n  data: T;\r\n  status: number;\r\n  statusText: string;\r\n  headers: RawAxiosResponseHeaders | AxiosResponseHeaders;\r\n  config: InternalAxiosRequestConfig<D>;\r\n  request?: any;\r\n}\r\n\r\nexport class AxiosError<T = unknown, D = any> extends Error {\r\n  constructor(\r\n      message?: string,\r\n      code?: string,\r\n      config?: InternalAxiosRequestConfig<D>,\r\n      request?: any,\r\n      response?: AxiosResponse<T, D>\r\n  );\r\n\r\n  config?: InternalAxiosRequestConfig<D>;\r\n  code?: string;\r\n  request?: any;\r\n  response?: AxiosResponse<T, D>;\r\n  isAxiosError: boolean;\r\n  status?: number;\r\n  toJSON: () => object;\r\n  cause?: Error;\r\n  static from<T = unknown, D = any>(\r\n    error: Error | unknown,\r\n    code?: string,\r\n    config?: InternalAxiosRequestConfig<D>,\r\n    request?: any,\r\n    response?: AxiosResponse<T, D>,\r\n    customProps?: object,\r\n): AxiosError<T, D>;\r\n  static readonly ERR_FR_TOO_MANY_REDIRECTS = \"ERR_FR_TOO_MANY_REDIRECTS\";\r\n  static readonly ERR_BAD_OPTION_VALUE = \"ERR_BAD_OPTION_VALUE\";\r\n  static readonly ERR_BAD_OPTION = \"ERR_BAD_OPTION\";\r\n  static readonly ERR_NETWORK = \"ERR_NETWORK\";\r\n  static readonly ERR_DEPRECATED = \"ERR_DEPRECATED\";\r\n  static readonly ERR_BAD_RESPONSE = \"ERR_BAD_RESPONSE\";\r\n  static readonly ERR_BAD_REQUEST = \"ERR_BAD_REQUEST\";\r\n  static readonly ERR_NOT_SUPPORT = \"ERR_NOT_SUPPORT\";\r\n  static readonly ERR_INVALID_URL = \"ERR_INVALID_URL\";\r\n  static readonly ERR_CANCELED = \"ERR_CANCELED\";\r\n  static readonly ECONNABORTED = \"ECONNABORTED\";\r\n  static readonly ETIMEDOUT = \"ETIMEDOUT\";\r\n}\r\n\r\nexport class CanceledError<T> extends AxiosError<T> {\r\n}\r\n\r\nexport type AxiosPromise<T = any> = Promise<AxiosResponse<T>>;\r\n\r\nexport interface CancelStatic {\r\n  new (message?: string): Cancel;\r\n}\r\n\r\nexport interface Cancel {\r\n  message: string | undefined;\r\n}\r\n\r\nexport interface Canceler {\r\n  (message?: string, config?: AxiosRequestConfig, request?: any): void;\r\n}\r\n\r\nexport interface CancelTokenStatic {\r\n  new (executor: (cancel: Canceler) => void): CancelToken;\r\n  source(): CancelTokenSource;\r\n}\r\n\r\nexport interface CancelToken {\r\n  promise: Promise<Cancel>;\r\n  reason?: Cancel;\r\n  throwIfRequested(): void;\r\n}\r\n\r\nexport interface CancelTokenSource {\r\n  token: CancelToken;\r\n  cancel: Canceler;\r\n}\r\n\r\nexport interface AxiosInterceptorOptions {\r\n  synchronous?: boolean;\r\n  runWhen?: (config: InternalAxiosRequestConfig) => boolean;\r\n}\r\n\r\nexport interface AxiosInterceptorManager<V> {\r\n  use(onFulfilled?: ((value: V) => V | Promise<V>) | null, onRejected?: ((error: any) => any) | null, options?: AxiosInterceptorOptions): number;\r\n  eject(id: number): void;\r\n  clear(): void;\r\n}\r\n\r\nexport class Axios {\r\n  constructor(config?: AxiosRequestConfig);\r\n  defaults: AxiosDefaults;\r\n  interceptors: {\r\n    request: AxiosInterceptorManager<InternalAxiosRequestConfig>;\r\n    response: AxiosInterceptorManager<AxiosResponse>;\r\n  };\r\n  getUri(config?: AxiosRequestConfig): string;\r\n  request<T = any, R = AxiosResponse<T>, D = any>(config: AxiosRequestConfig<D>): Promise<R>;\r\n  get<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  delete<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  head<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  options<T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  post<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  put<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  patch<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  postForm<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  putForm<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\r\n  patchForm<T = any, R = AxiosResponse<T>, D = any>(url: string, data?: D, config?: AxiosRequestConfig<D>): Promise<R>;\r\n}\r\n\r\nexport interface AxiosInstance extends Axios {\r\n  <T = any, R = AxiosResponse<T>, D = any>(config: AxiosRequestConfig<D>): Promise<R>;\r\n  <T = any, R = AxiosResponse<T>, D = any>(url: string, config?: AxiosRequestConfig<D>): Promise<R>;\r\n\r\n  defaults: Omit<AxiosDefaults, 'headers'> & {\r\n    headers: HeadersDefaults & {\r\n      [key: string]: AxiosHeaderValue\r\n    }\r\n  };\r\n}\r\n\r\nexport interface GenericFormData {\r\n  append(name: string, value: any, options?: any): any;\r\n}\r\n\r\nexport interface GenericHTMLFormElement {\r\n  name: string;\r\n  method: string;\r\n  submit(): void;\r\n}\r\n\r\nexport function getAdapter(adapters: AxiosAdapterConfig | AxiosAdapterConfig[] | undefined): AxiosAdapter;\r\n\r\nexport function toFormData(sourceObj: object, targetFormData?: GenericFormData, options?: FormSerializerOptions): GenericFormData;\r\n\r\nexport function formToJSON(form: GenericFormData|GenericHTMLFormElement): object;\r\n\r\nexport function isAxiosError<T = any, D = any>(payload: any): payload is AxiosError<T, D>;\r\n\r\nexport function spread<T, R>(callback: (...args: T[]) => R): (array: T[]) => R;\r\n\r\nexport function isCancel(value: any): value is Cancel;\r\n\r\nexport function all<T>(values: Array<T | Promise<T>>): Promise<T[]>;\r\n\r\nexport interface AxiosStatic extends AxiosInstance {\r\n  create(config?: CreateAxiosDefaults): AxiosInstance;\r\n  Cancel: CancelStatic;\r\n  CancelToken: CancelTokenStatic;\r\n  Axios: typeof Axios;\r\n  AxiosError: typeof AxiosError;\r\n  HttpStatusCode: typeof HttpStatusCode;\r\n  readonly VERSION: string;\r\n  isCancel: typeof isCancel;\r\n  all: typeof all;\r\n  spread: typeof spread;\r\n  isAxiosError: typeof isAxiosError;\r\n  toFormData: typeof toFormData;\r\n  formToJSON: typeof formToJSON;\r\n  getAdapter: typeof getAdapter;\r\n  CanceledError: typeof CanceledError;\r\n  AxiosHeaders: typeof AxiosHeaders;\r\n}\r\n\r\ndeclare const axios: AxiosStatic;\r\n\r\nexport default axios;\r\n"
}