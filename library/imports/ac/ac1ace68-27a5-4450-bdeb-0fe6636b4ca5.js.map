{"version":3,"sources":["assets\\Scripts\\login\\Login.js"],"names":["cc","Class","Component","properties","userName","type","EditBox","password","rememberMe","Toggle","lobbyNode","Node","errorLable","Label","loginErrorNode","onLoad","isChecked","logutClick","active","onLoginClick","address","K","ServerAddress","ipAddress","ServerAPI","login","data","username","string","setTimeout","ServerCom","httpRequest","response","token","randomNumber","Math","floor","random","sys","isBrowser","document","cookie","localStorage","setItem","bind","console","log"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        userName: {\r\n            default: null,\r\n            type: cc.EditBox,\r\n        },\r\n        password: {\r\n            default: null,\r\n            type: cc.EditBox,\r\n        },\r\n        rememberMe: {\r\n            default: null,\r\n            type: cc.Toggle\r\n        },\r\n        lobbyNode:{\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        errorLable:{\r\n            default: null,\r\n            type:cc.Label\r\n        },\r\n        loginErrorNode:{\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        \r\n    \r\n    },\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad () {\r\n        if(this.rememberMe){\r\n            this.rememberMe.isChecked = false;\r\n        }\r\n       \r\n    },\r\n    logutClick(){\r\n        if(this.lobbyNode.active){\r\n            this.lobbyNode.active = false;\r\n        }\r\n    },\r\n\r\n    onLoginClick (){\r\n        var address = K.ServerAddress.ipAddress + K.ServerAPI.login;\r\n        var data = {\r\n            username: this.userName.string,\r\n            password: this.password.string\r\n        };\r\n        if(this.userName.string == \"\" || this.password.string == \"\"){\r\n            this.errorLable.string = \"Username or Password fields are empty\"\r\n            this.loginErrorNode.active = true;\r\n            setTimeout(() => {\r\n                this.loginErrorNode.active = false;\r\n            }, 2000);\r\n            \r\n            return\r\n        }\r\n        ServerCom.httpRequest(\"POST\", address, data, function (response) {\r\n            if (response.token) {\r\n                const randomNumber = Math.floor(Math.random() * 10) + 1;\r\n                if (cc.sys.isBrowser) {\r\n                    document.cookie = `token=${response.token}; path=/;`;\r\n                    document.cookie = `index = ${randomNumber}`\r\n                } else {\r\n                    cc.sys.localStorage.setItem('token', response.token);\r\n                    cc.sys.localStorage.setItem(\"index\", randomNumber); \r\n                }\r\n                // Cookies.set(\"index\", randomNumber);\r\n                setTimeout(function () {\r\n                    this.lobbyNode.active = true;\r\n                }.bind(this), 1000);\r\n            }\r\n            else{\r\n                console.log(\"response of user not found on login page\", response);\r\n                // this.errorLable.string = response.error\r\n                // this.loginErrorNode.active = true;\r\n                // setTimeout(() => {\r\n                //     this.loginErrorNode.active = false;\r\n                // }, 2000);\r\n            }\r\n            \r\n        }.bind(this));\r\n\r\n    },\r\n});"]}